---
title: "Fonseca, J., Aslankoohi,E. and El-Samad, H. 2019. RNA sequencing analysis"
output: html_notebook
---


```{r}
#load metadata
rawinfo <- read.table('~/metadata.csv', header = TRUE, sep=',')
rownames(rawinfo)<- rawinfo[,1]
coldata <- as.data.frame(rawinfo[:,2:ncol(rawinfo)])
condition=as.factor(colnames(coldata))

# load data
rawdata <- read.table('~/geneExpression.txt', header = TRUE)
rawdata <- as.data.frame(rawdata[,])
cts <- rawdata[, rownames(coldata)]
rownames(cts) <- rawdata[,'X0']
```


```{r}
#load DESeq2
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
library("DESeq2")
dds <- DESeqDataSetFromMatrix(countData = cts,
                              colData = coldata,
                              design = ~ Genotype)
dds <- dds[ rowSums(counts(dds)) > 1, ] #filter absent transcripts
```


```{r}
#load gene names
namemap=read.table('~/data/180425/namemap.csv', header = TRUE, sep=",",stringsAsFactors = FALSE)
namemap[is.na(namemap)] <- ""
```


```{r}
#create geneExpression matrices

library ('tidyr')
library('dplyr')

vsd <- vst(dds, blind=FALSE)
geneExpression=as.data.frame(assay(vsd))
geneExpression_norm = rowMeans(geneExpression[,c(4:6)])
geneExpression_norm = geneExpression - geneExpression_norm


out=as.data.frame(geneExpression_norm)
colnames(out)=paste(paste(coldata$Genotype, coldata$Treatment, sep='-'), coldata$Replicate,sep='_')
out$genename=rownames(out)
all = tidyr::gather(out, Treatment, Expression, -genename)
all = all %>% separate(Treatment, c('Treatment', 'Replicate'), "_")

geneExpression_mean = all %>% group_by(Treatment, genename) %>% summarise(avg=log(mean(exp(Expression)))) %>% arrange(avg)
geneExpression_mean=as.data.frame(tidyr::spread(geneExpression_mean,genename,avg))
rownames(geneExpression_mean)=geneExpression_mean$Treatment
geneExpression_mean=dplyr::select(geneExpression_mean, -Treatment)
geneExpression_mean=as.data.frame(t(geneExpression_mean))
geneExpression_mean_norm= geneExpression_mean - geneExpression_mean$`bPAC-Control`

```


```{r}
DE analysis

dds$group <- factor(paste0(dds$Genotype, dds$Treatment))
design(dds) <- ~ group
dds <- DESeq(dds)


comparison_BL=c("group", "bPACLow", "bPACControl")
df_BL=as.data.frame(results(ddsColl, contrast = comparison_BL, alpha = 0.999))
comparison_PL=c("group", "ParentLow", "ParentControl")
df_PL=as.data.frame(results(ddsColl, contrast = comparison_PL, alpha = 0.999))
comparison_BH=c("group", "bPACHigh", "bPACControl")
df_BH=as.data.frame(results(ddsColl, contrast = comparison_BH, alpha = 0.999))
comparison_PH=c("group", "ParentHigh", "ParentControl")
df_PH=as.data.frame(results(ddsColl, contrast = comparison_PH, alpha = 0.999))
comparison_PLH=c("group", "ParentHigh", "ParentLow")
df_PLH=as.data.frame(results(ddsColl, contrast = comparison_PLH, alpha = 0.999))
comparison_BLH=c("group", "bPACHigh", "bPACLow")
df_BLH=as.data.frame(results(ddsColl, contrast = comparison_BLH, alpha = 0.999))


df=data.frame(df_BL$log2FoldChange,df_BL$padj,
              df_PL$log2FoldChange,df_PL$padj,
              df_BH$log2FoldChange,df_BH$padj,
              df_PH$log2FoldChange,df_PH$padj,
              df_PLH$log2FoldChange,df_PLH$padj,
              df_BLH$log2FoldChange,df_BLH$padj)

df$dogENS=rownames(df_BL)
df=dplyr::left_join(df, dplyr::select(namemap, -X), by = "dogENS")

padj_val = 0.05

df$threshold_L = as.factor(ifelse(df$df_PL.padj<padj_val & df$df_BL.padj<padj_val, "Parent and bPAC significant",ifelse(df$df_BL.padj<padj_val & df$df_PL.padj>padj_val,"bPAC significant",ifelse(df$df_PL.padj<padj_val & df$df_BL.padj>padj_val,"Parent significant", "Non significant"))))

df$threshold_H = as.factor(ifelse(df$df_PH.padj<padj_val & df$df_BH.padj<padj_val, "Parent and bPAC significant",ifelse(df$df_BH.padj<padj_val & df$df_PH.padj>padj_val,"bPAC significant",ifelse(df$df_PH.padj<padj_val & df$df_BH.padj>padj_val,"Parent significant", "Non significant"))))

df$threshold_LH = as.factor(ifelse(df$df_PLH.padj<padj_val & df$df_BLH.padj<padj_val, "Parent and bPAC significant",ifelse(df$df_BLH.padj<padj_val & df$df_PLH.padj>padj_val,"bPAC significant",ifelse(df$df_PLH.padj<padj_val & df$df_BLH.padj>padj_val,"Parent significant", "Non significant"))))

FC=log2(1.5)

df10 =  subset(df, (threshold_L == "bPAC significant" & (df$df_BL.log2FoldChange >FC | df$df_BL.log2FoldChange< -{FC})) | (threshold_H == "bPAC significant" & (df$df_BH.log2FoldChange >FC | df$df_BH.log2FoldChange< -{FC}))  | (threshold_LH == "bPAC significant" & (df$df_BLH.log2FoldChange >FC | df$df_BLH.log2FoldChange< -{FC})))


set.seed(20)
library(RColorBrewer)
coul = colorRampPalette(brewer.pal(11, "PuOr"))(256)
x=geneExpression_mean_norm[dplyr::filter(namemap,dogENS %in% df10$dogENS)[,'dogENS'],c(1,3,2)]
test2 = pheatmap(mat = x,cluster_cols = 0, clustering_distance_rows = 'correlation', clustering_method = 'complete', cutree_rows = 8, show_rownames = FALSE, color = coul, gaps_col = c(1,2), silent = TRUE)
cluster <- cutree(tree = as.dendrogram(test2$tree_row), k = 8)
x$cluster = cluster
clt = as.data.frame(cluster)
clt$cluster = as.character(clt$cluster)
mat_colors <- list(cluster = brewer.pal(8, "Set2"))
names(mat_colors$cluster) <- unique(clt$cluster)
breaksList = seq(-1*sqrt(max(x[,c(1:3)]**2)), sqrt(max(x[,c(1:3)]**2)),length.out = 256)
pdf("~/heatmap_allDE.pdf")
g = pheatmap(mat = x[,1:3],cluster_cols = 0, clustering_distance_rows = 'correlation', clustering_method = 'complete', cutree_rows = 8, show_rownames = FALSE, color = coul, gaps_col = c(1,2), annotation_row = clt, annotation_colors  = mat_colors, silent = FALSE, breaks = breaksList, filename = "~/heatmap_allDE.pdf")
dev.off()



cluster_mean = x %>% group_by(cluster) %>% summarise_all("mean")
cluster_mean = as.data.frame(cluster_mean)

cluster_sd = x %>% group_by(cluster) %>% summarise_all("sd")
cluster_sd = as.data.frame(cluster_sd)

cluster_mean2 <- gather(cluster_mean, condition, measurement, 'bPAC-Control':'bPAC-High', factor_key=TRUE)
cluster_sd2 <- gather(cluster_sd, condition, measurement, 'bPAC-Control':'bPAC-High', factor_key=TRUE)

cluster_mean2$condition2 = as.numeric(factor(cluster_mean2$condition))
cluster_sd2$condition2 = as.numeric(factor(cluster_sd2$condition))

cluster_mean2$measurementsd = cluster_sd2$measurement

ggplot(data=cluster_mean2, aes(x=condition2, y=measurement, group = cluster, color = as.factor(cluster))) +
  geom_errorbar(aes(ymin=measurement-measurementsd, ymax=measurement+measurementsd), width=1, position=position_dodge(0.05)) +
  geom_line(size = 2)+
  geom_point(size =3)+
  scale_color_brewer(palette="Set2")+
  theme_classic()

```


```{r}

## comparison between genotypes

comparison=c("group", "bPACControl", "ParentControl")
FC=log2(1.5)
PVAL = 0.05

df_genotype=as.data.frame(results(ddsColl, contrast = comparison, alpha = 0.999))
df_genotype$thresh =as.factor(ifelse(df_genotype$log2FoldChange > FC & df_genotype$padj <PVAL,"Overexpressed",ifelse(df_genotype$log2FoldChange < {-FC} & df_genotype$padj < PVAL,"Repressed","No change")))
df_genotype$dogENS=rownames(df_genotype)
df_genotype=dplyr::left_join(df_genotype, dplyr::select(namemap, -X), by = "dogENS")


library(ggrepel)
g = ggplot(data=df_genotype, aes(x=log2FoldChange, y=-log10(padj))) +
  geom_point(alpha=0.2, size=3, aes(color=thresh)) +
  xlab("log2 fold change") + ylab("-log10 padj") +
  scale_color_manual(values=c("ivory3", "green3", "magenta3"))+
  ggtitle(paste(comparison[2], 'v.', comparison[3], sep=' '))+
  geom_text(aes(label=ifelse((thresh!="No change") & ((log2FoldChange >4) |(log2FoldChange < {-2.5}) ),dogName,"")), size=1, check_overlap = TRUE)+
  coord_fixed(ratio = 0.2)+
  theme_classic()
```

```{r}
# heatmap bpac differential expressed genes
df_genotype2 = df_genotype[(df_genotype$thresh!='No change'),]
m2 = geneExpression_mean_norm[dplyr::filter(namemap,dogENS %in% df_genotype2$dogENS)[,'dogENS'],c(1,3,2)]


cltG = as.data.frame(df_genotype2$thresh)
names(cltG) = 'cluster'
row.names(cltG) <- row.names(m2)

clt_all = merge(cltG, clt, by.x="row.names", by.y="row.names", all.x = TRUE)
rownames(clt_all) = clt_all$Row.names
clt_all = subset(clt_all, select =-1 )


mat_colors <- list(cluster.x = brewer.pal(3, "Dark2"), cluster.y = brewer.pal(8, "Set2"))
names(mat_colors$cluster.y) <- unique(clt_all$cluster.y)[2:9]

pheatmap(m2, cluster_cols = 0, clustering_distance_rows = 'correlation', clustering_method = 'complete',color = coul, gaps_col = c(1,2), breaks = breaksList, show_rownames = FALSE, annotation_row = clt_all,annotation_colors = mat_colors ,  main = 'heatmap_parentvsbpac', filename = '~/heatmap_parentvsbpac.pdf')


```


```{r}
##write csv file with all DE expressed genes and in which cluster they are

df_suptbl1=dplyr::filter(df10,dogENS %in% namemap$dogENS)[,c('dogName', 'dogENS', 'df_BL.log2FoldChange', 'df_BL.padj','df_BH.log2FoldChange', 'df_BH.padj','df_BLH.log2FoldChange', 'df_BLH.padj')]

new_clt = clt
new_clt$dogENS = rownames(clt)

df_suptbl1 = merge(df_suptbl1, new_clt, by = 'dogENS')
df_suptbl1$dogName[df_suptbl1$dogName==""] <- "NA"

write.table(x=df_suptbl1,file = "~/sup_tbl1.txt",quote = F, col.names = c('Name', 'ENS', 'LFC_NOvLOW', 'padj_NOvLOW', 'LFC_NOvHIGH', 'padj_NOvHIGH', 'LFC_HIGHvLOW', 'padj_HIGHvLOW', 'Cluster'), row.names = F)

```




